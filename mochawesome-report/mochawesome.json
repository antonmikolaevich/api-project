{
  "stats": {
    "suites": 1,
    "tests": 9,
    "passes": 9,
    "pending": 0,
    "failures": 0,
    "start": "2022-10-30T21:40:24.899Z",
    "end": "2022-10-30T21:40:25.471Z",
    "duration": 572,
    "testsRegistered": 9,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "418ff193-8cd8-48f4-99e6-c9740c6ec10c",
      "title": "",
      "fullFile": "D:\\Automation Program Global - Advanced\\Homework 7 - CI-CD\\api-project\\test.spec.js",
      "file": "\\test.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "e1a153c9-218f-4645-9d04-8243e7a35c76",
          "title": "API tests in ReportPortal",
          "fullFile": "D:\\Automation Program Global - Advanced\\Homework 7 - CI-CD\\api-project\\test.spec.js",
          "file": "\\test.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "API test - get token",
              "fullTitle": "API tests in ReportPortal API test - get token",
              "timedOut": false,
              "duration": 176,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const authToken = await getToken(\"post\", dataToken);\nexpect(typeof authToken.data.access_token).to.equal('string');\nexpect(authToken.data.access_token).not.to.empty;\nauthorizationToken = authToken.data.access_token;\nexpect(authToken.status).to.equal(200);",
              "err": {},
              "uuid": "ec2e9a67-6901-4779-a35b-cef0ad9a65d1",
              "parentUUID": "e1a153c9-218f-4645-9d04-8243e7a35c76",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "API tests - create the widget",
              "fullTitle": "API tests in ReportPortal API tests - create the widget",
              "timedOut": false,
              "duration": 113,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const createWidget = await sendingRequest(\"post\", \"superadmin_personal/widget\", data, `${authorizationToken}`);\ncreatedWidgetId = createWidget.data.id;\nconst getWidget = await sendingRequest(\"get\", `superadmin_personal/widget/${createdWidgetId}`, null, `${authorizationToken}`);\nexpect(getWidget.data.name).to.equal(data.name);\nexpect(getWidget.data.description).to.equal(data.description);\nexpect(createWidget.status).to.equal(201);",
              "err": {},
              "uuid": "1faa39ea-492f-41aa-be24-a77595edf3c4",
              "parentUUID": "e1a153c9-218f-4645-9d04-8243e7a35c76",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "API tests - update the widget",
              "fullTitle": "API tests in ReportPortal API tests - update the widget",
              "timedOut": false,
              "duration": 54,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const updateWidget = await sendingRequest(\"put\", `superadmin_personal/widget/${createdWidgetId}`, updateWidgetData, `${authorizationToken}`);\nconst getWidget = await sendingRequest(\"get\", `superadmin_personal/widget/${createdWidgetId}`, null, `${authorizationToken}`);\nexpect(getWidget.data.name).to.equal(updateWidgetData.name);\nexpect(getWidget.data.description).to.equal(updateWidgetData.description);\nexpect(updateWidget.status).to.equal(200);",
              "err": {},
              "uuid": "57503870-3fda-4223-97c7-4445a53f77fc",
              "parentUUID": "e1a153c9-218f-4645-9d04-8243e7a35c76",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "API tests - delete the widget",
              "fullTitle": "API tests in ReportPortal API tests - delete the widget",
              "timedOut": false,
              "duration": 82,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const deleteWidget = await sendingRequest(\"delete\", `superadmin_personal/dashboard/58/${createdWidgetId}`, null, `${authorizationToken}`);\nexpect(deleteWidget.status).to.equal(200);\nconst getWidget = await sendingRequest(\"get\", `superadmin_personal/widget/${createdWidgetId}`, null, `${authorizationToken}`);\nexpect(getWidget.status).to.equal(404);\nexpect(getWidget.data.message).to.equal(`Widget with ID '${createdWidgetId}' not found on project 'superadmin_personal'. Did you use correct Widget ID?`);",
              "err": {},
              "uuid": "cd8cfd73-4028-4117-97ba-ae4bdf80fd9b",
              "parentUUID": "e1a153c9-218f-4645-9d04-8243e7a35c76",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "API tests - create the dashboard",
              "fullTitle": "API tests in ReportPortal API tests - create the dashboard",
              "timedOut": false,
              "duration": 40,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const createDashboard = await sendingRequest(\"post\", 'SUPERADMIN_PERSONAL/dashboard', dashboardData, `${authorizationToken}`);\ndashboardId = createDashboard.data.id;\nexpect(createDashboard.status).to.equal(201);\nconst getDashboard = await sendingRequest(\"get\", `SUPERADMIN_PERSONAL/dashboard/${dashboardId}`, null, `${authorizationToken}`);\nexpect(getDashboard.status).to.equal(200);\nexpect(getDashboard.data.description).to.equal(dashboardData.description);\nexpect(getDashboard.data.name).to.equal(dashboardData.name);",
              "err": {},
              "uuid": "ac5b295b-0578-4007-b1c0-a971eb696bb5",
              "parentUUID": "e1a153c9-218f-4645-9d04-8243e7a35c76",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "API tests - update the dashboard",
              "fullTitle": "API tests in ReportPortal API tests - update the dashboard",
              "timedOut": false,
              "duration": 34,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const updateDashboard = await sendingRequest(\"put\", `SUPERADMIN_PERSONAL/dashboard/${dashboardId}`, updateDashboardData, `${authorizationToken}`);\nexpect(updateDashboard.status).to.equal(200);\nconst getDashboard = await sendingRequest(\"get\", `SUPERADMIN_PERSONAL/dashboard/${dashboardId}`, null, `${authorizationToken}`);\nexpect(getDashboard.status).to.equal(200);\nexpect(getDashboard.data.description).to.equal(updateDashboardData.description);\nexpect(getDashboard.data.name).to.equal(updateDashboardData.name);",
              "err": {},
              "uuid": "0b7f0148-acdb-47eb-a178-a645932ca50e",
              "parentUUID": "e1a153c9-218f-4645-9d04-8243e7a35c76",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "API tests - delete the dashboard",
              "fullTitle": "API tests in ReportPortal API tests - delete the dashboard",
              "timedOut": false,
              "duration": 33,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const updateDashboard = await sendingRequest(\"delete\", `SUPERADMIN_PERSONAL/dashboard/${dashboardId}`, null, `${authorizationToken}`);\nexpect(updateDashboard.status).to.equal(200);\nconst getDashboard = await sendingRequest(\"get\", `SUPERADMIN_PERSONAL/dashboard/${dashboardId}`, null, `${authorizationToken}`);\nexpect(getDashboard.status).to.equal(404);\nexpect(getDashboard.data.message).to.equal(`Dashboard with ID '${dashboardId}' not found on project 'superadmin_personal'. Did you use correct Dashboard ID?`);",
              "err": {},
              "uuid": "a98d7927-41e0-44a0-9c63-23a6c8caf845",
              "parentUUID": "e1a153c9-218f-4645-9d04-8243e7a35c76",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "API tests - create the widget with incorrect request data",
              "fullTitle": "API tests in ReportPortal API tests - create the widget with incorrect request data",
              "timedOut": false,
              "duration": 13,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const createWidget = await sendingRequest(\"post\", \"superadmin_personal/widget\", incorrectData, `${authorizationToken}`);\nexpect(createWidget.status).to.equal(400);\nexpect(createWidget.data.message).to.contain('Incorrect Request');",
              "err": {},
              "uuid": "d9cb220d-d2c3-4339-8016-1f60fcfb3d0d",
              "parentUUID": "e1a153c9-218f-4645-9d04-8243e7a35c76",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "API tests - create the dashboard with incorrect request data",
              "fullTitle": "API tests in ReportPortal API tests - create the dashboard with incorrect request data",
              "timedOut": false,
              "duration": 12,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const createDashboard = await sendingRequest(\"post\", 'SUPERADMIN_PERSONAL/dashboard', incorrectDashboardData, `${authorizationToken}`);\nexpect(createDashboard.status).to.equal(400);\nexpect(createDashboard.data.message).to.contain('Incorrect Request');",
              "err": {},
              "uuid": "c45f26bc-f595-4f5c-8e15-0130f2a990b7",
              "parentUUID": "e1a153c9-218f-4645-9d04-8243e7a35c76",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ec2e9a67-6901-4779-a35b-cef0ad9a65d1",
            "1faa39ea-492f-41aa-be24-a77595edf3c4",
            "57503870-3fda-4223-97c7-4445a53f77fc",
            "cd8cfd73-4028-4117-97ba-ae4bdf80fd9b",
            "ac5b295b-0578-4007-b1c0-a971eb696bb5",
            "0b7f0148-acdb-47eb-a178-a645932ca50e",
            "a98d7927-41e0-44a0-9c63-23a6c8caf845",
            "d9cb220d-d2c3-4339-8016-1f60fcfb3d0d",
            "c45f26bc-f595-4f5c-8e15-0130f2a990b7"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 557,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.0.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}